import type { NextPage } from "next";
import React, { useCallback } from "react";
import Head from "next/head";
import Image from "next/image";
import { useEffect } from "react";
import Link from "next/link";
import { saveAs } from "file-saver";

const Home: NextPage = () => {
  const [images, setImages] = React.useState(null) as any;
  const [isLoading, setLoading] = React.useState<boolean>(false);
  const [description, setDescription] = React.useState<string | null>(null);
  const [currImageDesc, setCurrImageDesc] = React.useState<string | null>(null);
  const fetchGeneratedArt = async (desc: string) => {
    console.log("Generating....");
    setLoading(true);
    try {
      const res = await fetch("/api", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          //url: profileUrl,
          description: desc,
        }),
      }).then((res) => res.json());
      console.log(res);
      setImages(res.image);
    } catch (err: any) {
      console.log(err);
    } finally {
      console.log("Generated!");
      setLoading(false);
    }
  };

  const handleGenerateArt = () => {
    if (!description) return;
    setCurrImageDesc(description);
    fetchGeneratedArt(description);
  };

  const handleGenerateArtAgain = () => {
    if (!currImageDesc) return;
    fetchGeneratedArt(currImageDesc);
  };

  useEffect(() => {
    // fetchGeneratedImage();
  }, []);

  const hanldeInputChange = useCallback(
    (e: any) => {
      setDescription(e.target.value);
    },
    [description]
  );

  console.log(description);

  const handleDownloadImage = () => {
    if (images) saveAs(images.url, "yourArt.png");
    return;
  };

  return (
    <div className="w-full min-h-screen">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="w-full min-h-[50vh] bg-header relative flex flex-row items-center justify-evenly">
        <div className="flex items-center h-full">
          <div className="flex-1 space-y-14 px-5">
            <div className="font-black text-3xl text-center text-white">
              CREATE YOUR DIGITAL ART
            </div>
            <div className="w-full h-12 bg-white rounded-full p-1 outline outline-offset-8 outline-[2px] outline-white/10 flex flex-row justify-between items-center pl-5">
              <input
                type="text"
                placeholder="Dog in mars"
                className="outline-none flex-1 pr-3"
                onChange={hanldeInputChange}
              />
              <button
                disabled={isLoading || !description}
                onClick={handleGenerateArt}
                className="h-full w-24 px-3 bg-[#111526] rounded-full flex justify-center items-center cursor-pointer transition hover:shadow-lg"
              >
                <span className="text-white">
                  {isLoading ? "Loading..." : "Create"}
                </span>
              </button>
            </div>
          </div>
        </div>

        <div className="bg-white/10 rounded-lg w-[29rem] h-[29rem] transform translate-y-44 relative flex justify-center items-center backdrop-blur-3xl shadow-md">
          {images && (
            <>
              <Image src={images.url} alt="Art" fill className="rounded-md" />
              <div className="absolute w-full h-full -z-10 blur-3xl opacity-80">
                <Image src={images.url} alt="Art" fill />
              </div>
              <div className="absolute bottom-0 left-0 w-full h-20 bg-white/10 backdrop-blur-lg rounded-b-md flex justify-evenly items-center">
                <Link href={images.url} legacyBehavior>
                  <a
                    className="px-3 py-2 rounded-full text-[#111526] border border-[#111526]"
                    target="_blank"
                  >
                    Open
                  </a>
                </Link>

                <button
                  onClick={handleGenerateArtAgain}
                  className="bg-[#111526] text-white px-3 py-2 rounded-full hover:shadow-lg"
                >
                  Create Again
                </button>
                <button
                  onClick={() => handleDownloadImage()}
                  className="px-3 py-2 rounded-full text-[#111526] border border-[#111526]"
                >
                  Save
                </button>
              </div>
            </>
          )}
          <div className="font-black text-5xl text-center text-[#111526]">
            YOUR
            <br />
            ART
          </div>
          {isLoading && (
            <>
              <div className="w-full h-1 bg-white z-50 absolute animationGenerate left-0 rounded-full shadow-2xl shadow-white flex items-center justify-center">
                <div className="bg-white text-sm px-2 rounded-full text-gray-600">
                  Generating...
                </div>
              </div>
              <div className="absolute z-40 w-full h-full top-0 left-0 bg-linear rounded-md"></div>
            </>
          )}
        </div>
      </header>
      <main className="mx-auto container mt-10">
        <h1 className="font-bold text-gray-800 text-2xl">Recent Arts</h1>
      </main>
    </div>
  );
};

export default Home;
